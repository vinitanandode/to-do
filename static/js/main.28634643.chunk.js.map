{"version":3,"sources":["firebase.js","features/task/taskSlice.js","features/user/userSlice.js","components/Tasks.js","components/TodoHeader.js","components/Todo.js","components/Login.js","App.js","features/notes/notesSlice.js","app/store.js","app/localStorage.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","storage","taskSlice","createSlice","name","initialState","taskList","taskId","taskTitle","taskCompleted","taskDateAdded","reducers","setTasks","state","action","payload","sort","a","b","completed","x","y","completedTaskList","filter","addTask","unshift","updateTaskName","Date","toLocaleString","updateTaskStatus","newTaskList","index","findIndex","obj","id","deleteStateTask","filteredList","item","getCompleted","getPending","actions","selectTasks","tasks","selectNewTask","title","dateadded","userSlice","email","photo","setUserLogin","setSignOut","selectUserName","user","selectEmail","selectPhoto","Tasks","dispatch","useDispatch","newTask","useSelector","tasklist","userName","userEmail","userPhoto","RichTextEditor","createEmptyValue","history","useHistory","useEffect","getDbTasks","templist","collection","doc","orderBy","get","then","snap","forEach","tdata","data","push","response","getPendingDbTasks","where","getCompletedDbTasks","Nav","FilterContainer","UserContainer","UserImage","src","UserInfo","FilterWrap","onClick","alt","signOut","Container","TaskBar","Input","placeholder","onKeyPress","e","key","add","addDbTask","target","value","onChange","Icon","TaskList","map","task","Wrap","InputCheckBox","type","defaultChecked","update","checked","updateDbStatus","udpateDbTask","TaskTitle","ActionContainer","console","log","delete","deleteDbTask","taskDeleted","deleteTask","styled","div","input","TodoHeader","Logo","Title","Todo","Login","onAuthStateChanged","displayName","photoURL","Welcome","Content","Banner","WelcomeMessage","Features","LoginWrap","signInWithPopup","result","App","path","notesSlice","notesList","noteId","noteTitle","noteDateAdded","setNotes","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","configureStore","reducer","taskReducer","userReducer","notes","middleware","getDefaultMiddleware","serializableCheck","subscribe","stringify","setItem","saveState","getState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.28634643.chunk.js","sourcesContent":["import firebase from 'firebase'\n\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCetjdPqEdr5ieIywzXqVg-X7c8RGTCFDI\",\n    authDomain: \"vini-react-app.firebaseapp.com\",\n    databaseURL: \"https://vini-react-app-default-rtdb.firebaseio.com\",\n    projectId: \"vini-react-app\",\n    storageBucket: \"vini-react-app.appspot.com\",\n    messagingSenderId: \"773282494024\",\n    appId: \"1:773282494024:web:d85deeb80f9ccafbd6ca7d\",\n    measurementId: \"G-7LWW1DLL20\"\n  };\n\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\n  const db = firebaseApp.firestore();\n  const auth = firebase.auth();\n  const provider = new firebase.auth.GoogleAuthProvider();\n  const storage = firebase.storage();\n\n  export {auth, provider, storage}\n  export default db;","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  taskList: [],\n  taskId: \"\",\n  taskTitle: \"\",\n  taskCompleted: \"\",\n  taskDateAdded: \"\",\n};\n\nconst taskSlice = createSlice({\n  name: \"tasks\",\n  initialState,\n  reducers: {\n    setTasks: (state, action) => {\n      state.taskList = action.payload;\n      state.taskList.sort((a, b) => b.completed - a.completed);\n      state.taskList.sort(function (x, y) {\n        // false values first\n        return x.completed === y.completed ? 0 : x.completed ? 1 : -1;\n      });\n      state.completedTaskList = state.taskList.filter(\n        (a) => a.completed === true\n      );\n    },\n    addTask: (state, action) => {\n      state.taskList.unshift(action.payload);\n      state.taskList.sort((a, b) => b.completed - a.completed);\n      state.taskList.sort(function (x, y) {\n        // false values first\n        return x.completed === y.completed ? 0 : x.completed ? 1 : -1;\n      });\n    },\n    updateTaskName: (state, action) => {\n      state.taskTitle = action.payload;\n      state.taskCompleted = false;\n      state.taskDateAdded = Date().toLocaleString();\n      state.taskList.sort((a, b) => b.completed - a.completed);\n      state.taskList.sort(function (x, y) {\n        // false values first\n        return x.completed === y.completed ? 0 : x.completed ? 1 : -1;\n      });\n    },\n    updateTaskStatus: (state, action) => {\n      const newTaskList = [...state.taskList];\n      const index = newTaskList.findIndex(\n        (obj) => obj.id === action.payload.id\n      );\n      newTaskList[index].completed = action.payload.completed;\n      state.taskList = newTaskList;\n      state.taskList.sort((a, b) => b.completed - a.completed);\n      state.taskList.sort(function (x, y) {\n        // false values first\n        return x.completed === y.completed ? 0 : x.completed ? 1 : -1;\n      });\n    },\n    deleteStateTask: (state, action) => {\n      const newTaskList = [...state.taskList];\n      const index = action.payload.id;\n      const filteredList = newTaskList.filter((item) => item.id !== index);\n      state.taskList = filteredList;\n    },\n    getCompleted: (state, action) => {\n      let newTaskList = [...state.taskList];\n      newTaskList = newTaskList.filter((a) => a.completed === true);\n      state.taskList = newTaskList;\n    },\n    getPending: (state, action) => {\n      let newTaskList = [...state.taskList];\n      newTaskList = newTaskList.filter((a) => a.completed === false);\n      state.taskList = newTaskList;\n    },\n  },\n});\n\nexport const {\n  setTasks,\n  addTask,\n  updateTaskName,\n  updateTaskStatus,\n  deleteStateTask,\n  getCompleted,\n  getPending,\n} = taskSlice.actions;\n\nexport const selectTasks = (state) => state.tasks.taskList;\nexport const selectNewTask = (state) => {\n  return {\n    title: state.tasks.taskTitle,\n    completed: state.tasks.taskCompleted,\n    dateadded: state.tasks.taskDateAdded,\n  };\n};\n\nexport default taskSlice.reducer;\n","import {createSlice} from '@reduxjs/toolkit';\n\nconst initialState = {\n    name: '',\n    email: '',\n    photo: ''\n}\n\nconst userSlice = createSlice({\n    name: \"user\",\n    initialState,\n    reducers:{\n        setUserLogin: (state, action) => {\n            state.name = action.payload.name;\n            state.email = action.payload.email;\n            state.photo = action.payload.photo;\n        },\n        setSignOut: (state) => {\n            state.name = '';\n            state.email = '';\n            state.photo = '';\n        }\n    }\n})\n\n\nexport const {setUserLogin, setSignOut} = userSlice.actions;\n\nexport const selectUserName = (state) => state.user.name;\nexport const selectEmail = (state) => state.user.email;\nexport const selectPhoto = (state) => state.user.photo;\n\nexport default userSlice.reducer;","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport db, { auth } from \"../firebase\";\nimport {\n  addTask,\n  setTasks,\n  updateTaskName,\n  selectNewTask,\n  selectTasks,\n  updateTaskStatus,\n  deleteStateTask,\n  // getCompleted,\n  // getPending,\n} from \"../features/task/taskSlice\";\nimport {\n  selectUserName,\n  selectPhoto,\n  selectEmail,\n  setSignOut,\n} from \"../features/user/userSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"react-tabs/style/react-tabs.css\";\nimport RichTextEditor from \"react-rte\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Tasks() {\n  const dispatch = useDispatch();\n  const newTask = useSelector(selectNewTask);\n  const tasklist = useSelector(selectTasks);\n  const userName = useSelector(selectUserName);\n  const userEmail = useSelector(selectEmail);\n  const userPhoto = useSelector(selectPhoto);\n  RichTextEditor.createEmptyValue();\n  const history = useHistory();\n\n  useEffect(() => {\n    getDbTasks();\n  }, []);\n\n  const getDbTasks = async () => {\n    const templist = [];\n    const response = await db\n      .collection(userEmail)\n      .doc(\"tasks\")\n      .collection(\"taskList\")\n      .orderBy(\"dateadded\", \"desc\")\n      .get()\n      .then((snap) => {\n        snap.forEach(function (doc) {\n          const tdata = { id: doc.id, ...doc.data() };\n          templist.push(tdata);\n        });\n        return templist;\n      });\n    dispatch(setTasks(response));\n  };\n\n  const getPendingDbTasks = async () => {\n    const templist = [];\n    const response = await db\n      .collection(userEmail)\n      .doc(\"tasks\")\n      .collection(\"taskList\")\n      .where(\"completed\", \"==\", false)\n      .orderBy(\"dateadded\", \"desc\")\n      .get()\n      .then((snap) => {\n        snap.forEach(function (doc) {\n          const tdata = { id: doc.id, ...doc.data() };\n          templist.push(tdata);\n        });\n        return templist;\n      });\n    dispatch(setTasks(response));\n  };\n\n  const getCompletedDbTasks = async () => {\n    const templist = [];\n    const response = await db\n      .collection(userEmail)\n      .doc(\"tasks\")\n      .collection(\"taskList\")\n      .where(\"completed\", \"==\", true)\n      .orderBy(\"dateadded\", \"desc\")\n      .get()\n      .then((snap) => {\n        snap.forEach(function (doc) {\n          const tdata = { id: doc.id, ...doc.data() };\n          templist.push(tdata);\n        });\n        return templist;\n      });\n    dispatch(setTasks(response));\n  };\n\n  const OnKeyPressEvent = (e) => {\n    if (e.key === \"Enter\") {\n      const addDbTask = async () => {\n        const response = await db\n          .collection(userEmail)\n          .doc(\"tasks\")\n          .collection(\"taskList\")\n          .add(newTask);\n        newTask.id = response.id;\n        dispatch(addTask(newTask));\n      };\n      addDbTask();\n      e.target.value = \"\";\n    }\n  };\n\n  const onChangeEvent = (e) => {\n    dispatch(updateTaskName(e.target.value));\n  };\n\n  const onCheckboxClick = (id) => (e) => {\n    const updateDbStatus = async () => {\n      await db\n        .collection(userEmail)\n        .doc(\"tasks\")\n        .collection(\"taskList\")\n        .doc(id)\n        .update({\n          completed: e.target.checked,\n        });\n    };\n    updateDbStatus();\n    const udpateDbTask = {\n      completed: e.target.checked,\n      id: id,\n    };\n    dispatch(updateTaskStatus(udpateDbTask));\n  };\n\n  const deleteTask = (id) => {\n    console.log(\"deleed task:\", id);\n    const deleteDbTask = async () => {\n      db.collection(userEmail)\n        .doc(\"tasks\")\n        .collection(\"taskList\")\n        .doc(id)\n        .delete();\n    };\n    deleteDbTask();\n    console.log(\"delete id from db\");\n    const taskDeleted = {\n      id: id,\n    };\n    console.log(\"delete id\", taskDeleted);\n    dispatch(deleteStateTask(taskDeleted));\n  };\n\n  const logOut = () => {\n    auth.signOut().then(() => {\n      dispatch(setSignOut());\n      history.push(\"/login\");\n    });\n    history.push(\"/\");\n  };\n\n  const getCompletedTasks = () => {\n    getCompletedDbTasks();\n    // dispatch(getCompleted());\n  };\n\n  const getPendingTasks = () => {\n    getPendingDbTasks();\n    // dispatch(getPending());\n  };\n\n  return (\n    <Nav>\n      <FilterContainer>\n        <UserContainer>\n          <UserImage>\n            <img src={userPhoto} />\n          </UserImage>\n          <UserInfo>\n            Welcome <br></br> {userName} !\n          </UserInfo>\n        </UserContainer>\n        <FilterWrap onClick={getDbTasks}>\n          <img src=\"/images/alltasks.png\" alt=\"All Tasks\" />\n          <a>All Tasks</a>\n          {/* <div>{tasklist.length}</div> */}\n        </FilterWrap>\n        <FilterWrap onClick={getPendingTasks}>\n          <img src=\"/images/pending.png\" alt=\"Pending Tasks\" />\n          <a>Pending Tasks</a>\n          {/* <div>{tasklist.filter((a) => a.completed === false).length}</div> */}\n        </FilterWrap>\n        <FilterWrap onClick={getCompletedTasks}>\n          <img src=\"/images/done.png\" alt=\"Completed Tasks\" />\n          <a>Completed</a>\n          {/* <div>{tasklist.filter((a) => a.completed === true).length}</div> */}\n        </FilterWrap>\n        <FilterWrap onClick={logOut}>\n          <img src=\"/images/logout.png\" alt=\"Log out\" />\n          <a>Log out</a>\n        </FilterWrap>\n      </FilterContainer>\n      <Container>\n        <TaskBar>\n          <Input\n            placeholder=\"Enter task\"\n            onKeyPress={OnKeyPressEvent}\n            onChange={onChangeEvent}\n          />\n          <Icon>\n            <img src=\"/images/clear.png\" alt=\"Clear Text\" />\n          </Icon>\n        </TaskBar>\n        <TaskList>\n          {tasklist &&\n            tasklist.map((task) => (\n              <Wrap key={task.id}>\n                <InputCheckBox\n                  type=\"checkbox\"\n                  id={task.id}\n                  defaultChecked={task.completed}\n                  onChange={onCheckboxClick(task.id)}\n                />\n                <TaskTitle>{task.title}</TaskTitle>\n                <ActionContainer>\n                  <img\n                    src=\"/images/delete.png\"\n                    onClick={() => deleteTask(task.id)}\n                    alt=\"Delete Task\"\n                  />\n                </ActionContainer>\n              </Wrap>\n            ))}\n        </TaskList>\n      </Container>\n    </Nav>\n  );\n}\n\nexport default Tasks;\n\nconst Nav = styled.div`\n  display: flex;\n  background-color: grey;\n  min-height: calc(100vh - 50px);\n  overflow: hidden;\n  position: relative;\n`;\n\nconst Container = styled.div`\n  padding: 10px 10px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  margin-top: 25px;\n  align-items: center;\n`;\n\nconst TaskBar = styled.div`\n  border: 3px solid rgba(249, 249, 249, 0.1);\n  background-color: white;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  padding: 5px;\n  width: 90%;\n  border-radius: 10px;\n\n  &:hover {\n    box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,\n      rgb(0 0 0 / 73%) 0px 16px 10px -10px;\n  }\n`;\n\nconst Input = styled.input`\n  min-height: 25px;\n  background-color: transparent;\n  border: 0;\n  flex: 1 0;\n  font-size: 15px;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst InputCheckBox = styled.input`\n  min-width: 15px;\n  min-height: 15px;\n  background-color: transparent;\n\n  &:hover {\n    box-shadow: 3px 3px 3px thistle;\n  }\n`;\n\nconst Icon = styled.div`\n  flex: 0 0;\n  justify-content: center;\n  cursor: pointer;\n\n  img {\n    width: 25px;\n    height: 25px;\n  }\n`;\n\nconst TaskTitle = styled.div`\n  padding-left: 5px;\n`;\n\nconst TaskList = styled.div`\n  border: 1px thin;\n  background-color: white;\n  padding: 5px 5px;\n  margin: 10px;\n  width: 90%;\n  height: 70vh;\n  overflow: scroll;\n  border-radius: 10px;\n  position: relative;\n`;\n\nconst Wrap = styled.div`\n  border: 1px solid rgba(249, 249, 249, 0.1);\n  border-radius: 10px;\n  /* background-color: rgb(186,189,194); */\n  display: flex;\n  padding: 5px;\n  position: obsolute;\n  margin: 10px;\n  align-items: center;\n  border-radius: 16px;\n  background: linear-gradient(145deg, #ffffff, #e6e6e6);\n  box-shadow: 5px 5px 10px #a6a6a6, -5px -5px 10px #ffffff;\n`;\nconst ActionContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: flex-end;\n  cursor: pointer;\n\n  img {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nconst FilterContainer = styled.div`\n  width: 450px;\n  height: 90%;\n  background-color: white;\n  margin: 30px 15px 30px 30px;\n  border-radius: 12px;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst FilterWrap = styled.div`\n  font-size: 12px;\n  padding: 5px 10px;\n  letter-spacing: 2px;\n  align-items: center;\n  display: flex;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: grey;\n  }\n\n  a {\n    font-size: 15px;\n  }\n\n  img {\n    margin: 5px;\n    width: 20px;\n    height: 20px;\n  }\n\n  div {\n    padding: 0;\n    display: flex;\n    flex: 1;\n    justify-content: flex-end;\n    text-align: center;\n  }\n`;\n\nconst UserContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: 30px 30px;\n`;\n\nconst UserImage = styled.div`\n  img {\n    border-radius: 50%;\n    width: 60px;\n    height: 60px;\n  }\n`;\n\nconst UserInfo = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction TodoHeader() {\n  return (\n    <Container>\n      <Logo>{/* <img src=\"/images/menu2.png\" alt=\"Menu\"/> */}</Logo>\n      <Title>My To-do list</Title>\n    </Container>\n  );\n}\n\nexport default TodoHeader;\n\nconst Container = styled.div`\n  width: 100vw;\n  height: 50px;\n  background-color: black;\n  color: white;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  position: relative;\n`;\n\nconst Logo = styled.div`\n  align-items: center;\n\n  img {\n    width: 30px;\n    padding: 0px 10px;\n  }\n`;\n\nconst Title = styled.div`\n  font-size: 20px;\n  flex: 1;\n  display: flex;\n  align-items: center;\n  padding: 0px 20px;\n  padding-bottom: 5px;\n`;\n\n","import React from 'react'\nimport Tasks from './Tasks';\nimport TaskHeader from './TodoHeader';\n\nfunction Todo() {\n    return (   \n        <>     \n        <TaskHeader/>              \n        <Tasks/>                                     \n        </>\n    )\n}\n\nexport default Todo\n","import React, {useEffect} from 'react'\nimport styled from 'styled-components';\nimport { auth, provider} from '../firebase';\nimport { useDispatch } from 'react-redux';\nimport { setUserLogin} from '../features/user/userSlice'\nimport { useHistory } from 'react-router-dom';\n\nfunction Login() {\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    useEffect(()=>{\n        auth.onAuthStateChanged(async (user) =>{\n          if(user){\n            dispatch(setUserLogin({\n              name: user.displayName,\n              email: user.email,\n              photo: user.photoURL\n            }))\n            history.push(\"/home\")\n          }\n        })\n      }, [])\n    \n    const logIn = () => {\n        auth.signInWithPopup(provider)\n        .then((result) => {\n            const user = result.user\n            dispatch(setUserLogin({\n                name: user.displayName,\n                email: user.email,\n                photo: user.photoURL\n            }))\n            history.push(\"/home\");\n        })        \n    }\n\n    return (\n        <Container>\n            <Welcome>\n                <img src=\"/images/bg.jpg\"/>\n            </Welcome>\n            <Content>\n                <Banner>\n                    <span>My to-do list</span>\n                </Banner>\n                <WelcomeMessage>                \n                    Keep up with your tasks and boost your productivity.\n                </WelcomeMessage>\n                <Features>\n                    <a>\n                        <img src=\"/images/check2.png\"/>\n                        <span>Keep all your tasks at one place</span>\n                    </a>\n                    <a>\n                        <img src=\"/images/check2.png\"/>\n                        <span>Manage your tasks from any device</span>\n                    </a>\n                    <a>\n                        <img src=\"/images/check2.png\"/>\n                        <span>Get overview of pending and completed tasks</span>\n                    </a>\n                </Features>\n                <LoginWrap onClick={logIn}>\n                    <a>\n                        <img src=\"/images/google.svg\"/>\n                        <span>Sign in with Google</span>\n                    </a>                \n                </LoginWrap>\n            </Content>\n        </Container>\n    )\n}\n\nexport default Login\n\nconst Container = styled.div`\n    background-color: white;\n    padding: 10px 10px;\n    width: calc(100vw- 30px);\n    display: flex;    \n    margin-top: 5px;    \n    /* align-items: center; */\n    flex-direction: row;\n    /* justify-content: center; */\n\n    @media(max-width: 756px){\n        flex-direction: column;\n        align-items: center;\n    }\n`\n\nconst Content = styled.div`\n    /* top:0; */\n    margin-top: 60px;\n    /* border: 1px solid black; */\n    \n    @media(max-width: 756px){\n        display:flex;\n        flex-direction: column;\n        align-items: center;\n    }\n`\n\nconst Welcome = styled.div`\n\n    img{\n        /* border: 1px solid black; */\n        /* width: 500px;\n        height: 500px; */\n    }\n`\n\nconst LoginWrap = styled.div`\n    /* border: 1px solid;     */\n    width: 50%;\n    /* border-radius: 5px; */\n    padding: 5px 10px;\n    margin: 10px;  \n    display: flex;  \n    align-items: center;\n    justify-content: center;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    cursor: pointer;\n    transition: all 250ms ease 0s;\n    border-radius: 29px;\nbackground: linear-gradient(145deg, #e6e6e6, #ffffff);\nbox-shadow:  8px 8px 15px #c2c2c2,\n             -8px -8px 15px #ffffff;\n\n    @media(max-width: 756px){\n        \n    }\n\n    a{  \n        display: flex;\n        align-items: center;\n\n        img{        \n        padding: 5px 5px;        \n        }\n\n    span{\n        padding: 5px 5px;\n    }\n\n    }\n    \n    &:hover{\n        /* background-color: white;\n        color: #000;\n        border-color: transparent; */\n        border-radius: 51px;\nbackground: linear-gradient(145deg, #cacaca, #f0f0f0);\nbox-shadow:  10px 10px 28px #9f9f9f,\n             -10px -10px 28px #ffffff;\n    }\n`\n\nconst WelcomeMessage = styled.div`\n    margin-bottom: 20px;\n    font-weight: 500;\n    font-size: 25px;\n    /* display: flex; */\n\n    @media(max-width: 756px){        \n        text-align: center;\n    }\n`\n\nconst Features = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: left;\n    margin-bottom: 30px;\n\n    @media(max-width: 756px){\n        /* align-items: center; */\n        /* justify-content: center; */\n\n    }\n\n    a{\n        display: flex;\n        align-items: center;\n        img{\n            padding: 5px 10px;\n            width: 20px;\n            height: 20px;\n        }\n\n        span{\n            /* padding: 5px 10px; */\n        }\n    }\n`\n\nconst Banner = styled.div`\n    font-size: 50px;\n    font-weight: 1500;\n    margin-bottom: 10px;\n`\n\n","import React from 'react';\nimport './App.css';\nimport Todo from './components/Todo'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from './components/Login';\n\nfunction App() {\n  return (\n      <Router>\n        <Switch>            \n            <Route path=\"/home\" >\n                <Todo/>                     \n            </Route>\n            <Route path=\"/\">\n                <Login/>                    \n            </Route> \n        </Switch>                             \n      </Router>           \n  );\n}\n\nexport default App;\n","import {createSlice} from '@reduxjs/toolkit';\n\nconst initialState = {\n    notesList: [],\n    noteId: \"\",\n    noteTitle: \"\",    \n    noteDateAdded: \"\"\n}\n\nconst notesSlice = createSlice({\n    name:\"notes\",\n    initialState,\n    reducers:{\n        setNotes: (state, action) => {\n            state.notesList = action.payload;\n        },  \n        // addNote: (state, action) => {\n        //     state.notesList.unshift(action.payload);              \n        // },\n        // updateNote:(state, action) => {            \n        //     state.taskTitle = action.payload;\n        //     state.taskCompleted = false;\n        //     state.taskDateAdded = Date().toLocaleString();\n        // },        \n    }\n})\n\nexport const {setNotes} = notesSlice.actions;\n\nexport const selectNotes = (state) => state.notes.notesList;\n\nexport default notesSlice.reducer;","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport notesSlice from '../features/notes/notesSlice';\nimport taskReducer from '../features/task/taskSlice';\nimport userReducer from '../features/user/userSlice';\nimport {loadState, saveState} from './localStorage'; \n\nconst persistedState = loadState();\nexport const store = configureStore({\n  persistedState,\n  reducer: {\n    tasks: taskReducer,\n    user: userReducer,\n    notes: notesSlice\n  },\n  middleware: getDefaultMiddleware({\n    serializableCheck: false,\n  })\n});\n\nstore.subscribe(() =>{\n  saveState(store.getState());\n})\n\n// import { createStore, applyMiddleware } from 'redux'\n// import { persistStore, persistReducer } from 'redux-persist' // imports from redux-persist\n// import storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\n// import rootReducer from './reducers' // Root reducer\n\n// const persistConfig = { // configuration object for redux-persist\n//     key: 'root',\n//     storage, // define which storage to use\n// }\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer) // create a persisted reducer\n\n// const store = createStore(\n//     persistReducer, // pass the persisted reducer instead of rootReducer to createStore\n//     applyMiddleware() // add any middlewares here\n// )\n\n// const  persistor = persistStore(store); // used to create the persisted store, persistor will be used in the next step\n\n// export {store, persistor}","\nexport const loadState = () =>{\n    try{\n        const serializedState = localStorage.getItem('state');\n        if(serializedState === null){\n            return undefined;\n        }\n        else JSON.parse(serializedState);\n    }\n    catch(err){\n        return undefined;\n    }\n}\n\n\nexport const saveState = (state) =>{\n    try{\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem('state',serializedState);\n    }\n    catch(err){\n        return undefined;\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>    \n      <App />      \n    </Provider>\n  </React.StrictMode>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}